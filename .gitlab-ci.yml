image: ubuntu:latest

before_script:
- apt-get update -yqq
- apt-get install sudo git subversion build-essential libncurses5-dev zlib1g-dev gawk unzip libxml-perl flex wget gawk libncurses5-dev gettext quilt python libssl-dev rsync -yqq

cache:
    key: "$CI_BUILD_REF_NAME"
    paths:
     - dl

stages: 
    - prepare
    - build:ar71xx
    - build:ramips_mt7620
    - build:ramips_mt7628
    - build:x86
    - build:uml
    - deploy

prepare:
    stage: prepare
    script:
     - rm -rf /cache/build # clean start
     - mkdir -p /cache/build/$CI_PIPELINE_ID || echo "build dir already there"
     - chown -R nobody:nogroup /cache/build && chmod 777 /cache/build #yolo

build:ar71xx:
    stage: build:ar71xx
    script:
     - ln -s /cache/build/$CI_PIPELINE_ID build
     - touch build
     - chown -R nobody:nogroup .
     - sudo -u nobody make TARGET=ar71xx  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day

build:ramips_mt7620:
    stage: build:ramips_mt7620
    script:
     - ln -s /cache/build/$CI_PIPELINE_ID build
     - touch build # fixing mtime?
     - chown -R nobody:nogroup .
     - sudo -u nobody make TARGET=ramips_mt7620  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day

build:ramips_mt7628:
    stage: build:ramips_mt7628
    script:
     - ln -s /cache/build/$CI_PIPELINE_ID build
     - chown -R nobody:nogroup .
     - sudo -u nobody make TARGET=ramips_mt7628  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day

build:x86:
    stage: build:x86
    script:
     - ln -s /cache/build/$CI_PIPELINE_ID build
     - chown -R nobody:nogroup .
     - sudo -u nobody make TARGET=x86  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day


build:uml:
    stage: build:uml
    script:
     - ln -s /cache/build/$CI_PIPELINE_ID build
     - chown -R nobody:nogroup .
     - sudo -u nobody make TARGET=uml  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day
             
deploy:
    stage: deploy
    script:
     - eval $(ssh-agent -s) 
     - ssh-add <(echo "${SSH_PRIVATE_KEY}") 
     - echo "${SSH_HOST_KEY}" > hostkey 
     - rsync -hrvz -e 'ssh -o "UserKnownHostsFile hostkey"' firmwares firmware@weimarnetz.segfault.gq:/
