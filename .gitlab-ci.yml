image: ubuntu:latest

before_script:
- apt-get update -yqq
- apt-get install sudo git subversion build-essential libncurses5-dev zlib1g-dev gawk unzip libxml-perl flex wget gawk libncurses5-dev gettext quilt python libssl-dev rsync -yqq

stages: 
    - prepare
    - build
    - deploy

prepare:
    stage: prepare
    script: 
     - mkdir /cache/build || echo "build dir already there"
     - chown -R nobody:nogroup /cache/build
     - ln -s /cache/build build
     - chown -R nobody . 
     - sudo -u nobody make prepare
     - sudo -u nobody sh -c "cd lede; make prepare -j$(nproc) "

build:ar71xx:
    stage: build
    script:
     - ln -s /cache/build build
     - chown -R nobody .
     - sudo -u nobody make TARGET=ar71xx  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day

build:ramips_mt7620:
    stage: build
    script:
     - ln -s /cache/build build
     - chown -R nobody .
     - sudo -u nobody make TARGET=ramips_mt7620  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day

build:ramips_mt7628:
    stage: build
    script:
     - ln -s /cache/build build
     - chown -R nobody .
     - sudo -u nobody make TARGET=ramips_mt7628  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day

build:x86:
    stage: build
    script:
     - ln -s /cache/build build
     - chown -R nobody .
     - sudo -u nobody make TARGET=x86  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day


build:uml:
    stage: build
    script:
     - ln -s /cache/build build
     - chown -R nobody .
     - sudo -u nobody make TARGET=uml  -j$(nproc)
    artifacts:
     paths:
      - firmwares
     expire_in: 1 day
             
deploy:
    stage: deploy
    script:
     - eval $(ssh-agent -s) 
     - ssh-add <(echo "${SSH_PRIVATE_KEY}") 
     - echo "${SSH_HOST_KEY}" > hostkey 
     - rsync -hrvz -e 'ssh -o "UserKnownHostsFile hostkey"' firmwares firmware@weimarnetz.segfault.gq:/
